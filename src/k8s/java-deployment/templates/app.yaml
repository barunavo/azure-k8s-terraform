apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.REPLICAS  | int}}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: java-app
          image: {{ .Values.image }}
          ports:
            - containerPort: 8080
              protocol: TCP
          # readinessProbe:
          #   httpGet:
          #     path: /status/started
          #     port: 8080
          #   initialDelaySeconds: 170
          #   successThreshold: 1
          #   periodSeconds: 10
          # livenessProbe:
          #   httpGet:
          #     path: /status/checked
          #     port: 8080
          #   initialDelaySeconds: 170
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 30
          resources:
            requests:
              cpu: {{ .Values.CPU }}
              memory: {{ .Values.MEMORY }}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  ports:
    - port: 80
      targetPort: 8080
  type: NodePort
  selector:
    app: {{ .Release.Name }}
---
apiVersion:  networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  annotations:
    kubernetes.io/ingress.class: nginx-ext
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
spec:
  rules:
    - host: {{ .Values.BASEURL }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ .Release.Name }}
              servicePort: 8080
  tls:
  - secretName: aks-ingress-tls
  
